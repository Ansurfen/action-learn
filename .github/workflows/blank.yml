name: Multi-Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      # 打包第一个 zip 文件
      - name: Archive Directory A
        uses: montudor/action-zip@v1
        with:
          files: './hulo'
          exclude_patterns: './todo'
          output_name: 'build-a.zip'
          output_path: './dist'

      - name: Wait for Zip File
        run: sleep 5

      # 发布第一个 zip 文件
      - name: Create Release A
        id: create_release_a
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-a
          release_name: Release ${{ github.run_number }} A
          body: Automated daily build and release of repository A.
          draft: false
          prerelease: false
      
      - name: Get Upload URL
        id: get_upload_url_a
        run: echo "::set-output name=upload_url::${{ steps.create_release_a.outputs.upload_url }}"
          
      - name: Upload Release Asset A
        id: upload-release-asset_a
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url_a.outputs.upload_url }}
          asset_path: './dist/build-a.zip'
          asset_name: build-a.zip
          asset_content_type: application/zip
        if: steps.create_release_a.outputs.id != ''
        
      # 打包第二个 zip 文件
      - name: Archive Directory B
        uses: montudor/action-zip@v1
        with:
          files: './opencmd'
          exclude_patterns: './todo'
          output_name: 'build-b.zip'
          
      # 发布第二个 zip 文件
      - name: Create Release B
        id: create_release_b
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-b
          release_name: Release ${{ github.run_number }} B
          body: Automated daily build and release of repository B.
          draft: false
          prerelease: false
      
      - name: Get Upload URL
        id: get_upload_url_b
        run: echo "::set-output name=upload_url::${{ steps.create_release_b.outputs.upload_url }}"          

      - name: Upload Release Asset B
        id: upload-release-asset_b
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url_b.outputs.upload_url }}
          asset_path: ./build-b.zip
          asset_name: build-b.zip
          asset_content_type: application/zip
        if: steps.create_release_b.outputs.id != ''
